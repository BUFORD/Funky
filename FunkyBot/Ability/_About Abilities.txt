Properties:
		ExecutionType - How the ability should be setup for use. (accepts multiple values)
		Cost - The Resource Required To Cast.
		Cooldown - Used in conjuction with precast flag: CheckRecastTimer.
		SecondaryEnergy - Used only for Demon Hunters, Discipline is Secondary.
		Counter - Used for Pets or Buffs. (See: Witchdoctor -> Soul Harvest / Gargantuan)
		WaitVars - Pre Interaction and Post Interaction Wait Loops.
		Range - Maximum Range Allowed.
		IsRanged - Ranged Abilities
		IsBuff - Usable as a buff.
		IsADestructiblePower
		IsSpecialAbility - Used in conjuction with WaitingForSpecial (Currently set in Custom Combat Conditions)
		UseageType - When to use the ability (I.E. Combat)
		Priority - The order in which abilities are checked. (Highest to Lowest)

Criterias:
	PreCastFlags - The conditions to validate the ability is usable.
		Note: Multiple Flags can be set. This validates the ability is capable of use, prior to combat checks.

		Available Flags:
		CheckEnergy (Checks energy is equal or greater than Cost. Note: IsSpecialAbility is triggered using this flag -- Bot.Class.bWaitingForSpecial)
		CheckExisitingBuff (Checks if Bot has buffs with the same SNOPower as the ability -- Uses Counter to check for stacking buffs),
		CheckPetCount (Checks if Pet Count is equal to or greater than the Counter),
		CheckRecastTimer (Checks if the last used milliseconds has surpassed the Cooldown Value),
		CheckCanCast= (Uses ZetaDia.PowerManger to validate the ability can be used! Note: IsSpecialAbility is triggered when failure is due to not enough energy, triggering the flag -- Bot.Class.bWaitingForSpecial),
		CheckPlayerIncapacitated (Checks if the Bot is Incapacitated -- Knockback/Fear/Rooted/Frozen/etc),
		CheckPlayerRooted= (Checks if the Bot is Rooted -- Jail/Frozen),


--Combat Criterias:
	*These are the FOUR main combat conditions that are checked*
	ClusterConditions - A Cluster Condition (Should be used with ExecutionTypes: ClusterTarget, ClusterLocation, ClusterTargetNearest)
	
	TargetUnitConditionFlags - Single Target Conditions
		Note: See "enum TargetProperties" for all possible flags usable.

		Parameters:
		-True Target Flags -- The set flags must be true for the target! (Note: Using None will allow ANY target)
		-Minimum Distance -- Optional distance required
		-Minimum Health Percent -- Optional Health Percent Required
		-False Target Flags -- Optional flags that cannot be true!

	
	UnitsWithinRangeConditions - Any Units within Range.
	ElitesWithinRangeConditions - Any Above Average Units within Range.


--Custom Combat Criteria:
	FCombatCriteria - This is checked after the combat criterias, however if none of the four are set and this is set, then it will be tested.


Custom Func Conditions:
	Note: These are custom methods that are used for various things!
	Fbuff - Buffing
	FCombatMovement - Avoidance Movement
	FOutOfCombatMovement - Non-Combat Movement
	FcriteriaCombat - Combat Condition (Note: This will always be tested if set. Unless Combat Criterias is set but fails. If no combat criteria is set, then this will be tested still.)



ExecutionType is how the ability will be used. Multiple types are allowed however Cluster Types will only be used when Cluster Condition is the passing criteria.
Execution Types:
    Buff -- To be casted upon the Bot.
    Location -- Targets the position of the Current Target
    Target -- Interaction with Current Target (use upon target)
    ClusterTarget -- Interaction with Mid Unit
    ClusterLocation -- Targets Position of Mid Unit
    ZigZagPathing -- Generates a position to target (I.E. Whirlwhind..)
    Self -- Targets the Bots Position (I.E. Sentry, Big Bad Voodoo)
    ClusterTargetNearest -- Targets the Unit nearest the bot in the cluster


How an ability is evaluated for Combat:
	-->	PreCast Conditions

		-These are tested in the order seen below---
		-If one is successful then it will skip to the Custom Combat Condition----
		-Note: If none of the conditions are set and Custom Combat Condition is set, then it will be tested still.----
		-->	ElitesInRange Condition
		--> UnitsInRange Condition
		--> Cluster Condition
		--> Single Target Condition

		-Note: Custom Combat Condition is NOT required! but if set it will always be tested!-
		--> Custom Combat Condition
			-->Ability is valid for use

